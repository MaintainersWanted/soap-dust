<?xml version="1.0"?>

<project name="soap-dust" default="jar" basedir=".">
  <property name="ant-release-support" value="${basedir}/tools/ant-release-support.sh"/>
  <property name="build.dir" value="${basedir}/target"/>
  <property name="classes.main.dir" value="${build.dir}/classes"/>
  <property name="classes.test.dir" value="${build.dir}/test"/>
  <property name="report.test.dir" value="${build.dir}/test-report"/>
  <property name="src.main.dir" value="${basedir}/src"/>
  <property name="src.test.dir" value="${basedir}/test"/>
  <property name="lib.dir" value="${basedir}/lib"/>
  <property name="resources.dir" value="${basedir}/resources"/>
  <property name="jar.file" value="${build.dir}/soap-dust.jar"/>
  <property name="api.dir" value="${basedir}/../../www/htdocs/api"/>

  <target name="release"
          description="Build a versioned library jar file. Check that you do not have unchecked local modifications before proceeding.">
    <exec executable="${ant-release-support}"
          outputproperty="deliverable"
          resultproperty="exec.result"/>
    <fail message="${deliverable}">
      <condition>
        <not><equals arg1="${exec.result}" arg2="0"/></not>
      </condition>
    </fail>
    <antcall target="jar">
      <param name="jar.file" value="${build.dir}/${deliverable}.jar"/>
    </antcall>
  </target>

  <target name="jar" depends="compile"
          description="Build unversioned library jar file. You may prefer release for a versioned jar.">
    <jar destfile="${jar.file}"
         basedir="${classes.main.dir}"/>
  </target>

  <target name="clean" description="clean project (remove target directory).">
    <delete dir="${build.dir}"/>
  </target>

  <target name="doc" description="generate javadoc">
    <delete dir="${api.dir}"/>
    <javadoc sourcepath="${src.main.dir}"
             destdir="${api.dir}" />
  </target>

  <!-- -->

  <target name="test" depends="compile-test">
    <junit printsummary="yes" fork="yes" haltonfailure="yes">
      <classpath>
        <pathelement location="${lib.dir}/junit-3.8.2.jar"/>
        <pathelement location="${classes.main.dir}"/>
        <pathelement location="${classes.test.dir}"/>
      </classpath>
      <formatter type="plain"/>
      <batchtest todir="${report.test.dir}" fork="yes">
        <fileset dir="${src.test.dir}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="compile-test" depends="compile">
    <javac srcdir="${src.test.dir}"
           destdir="${classes.test.dir}"
           classpath="${classes.main.dir}:${lib.dir}/junit-3.8.2.jar"
           fork="true"
           source="1.5"
           target="1.5"/>
  </target>

  <target name="compile" depends="prepare">
    <javac srcdir="${src.main.dir}"
           destdir="${classes.main.dir}"
           classpath="lib/servlet-api-2.5.jar"
           fork="true"
           source="1.5"
           target="1.5"/>
  </target>

  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${report.test.dir}"/>
    <mkdir dir="${classes.test.dir}"/>
    <mkdir dir="${classes.main.dir}"/>
    <copy todir="${classes.main.dir}">
      <fileset dir="${resources.dir}"/>
    </copy>
  </target>

</project>

